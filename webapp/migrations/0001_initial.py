# Generated by Django 2.1.2 on 2018-10-13 09:22

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_prof', models.BooleanField(default=False)),
                ('is_ra', models.BooleanField(default=False)),
                ('platform_admin', models.BooleanField(default=False)),
                ('experiment_admin', models.BooleanField(default=False)),
                ('custom_id', models.IntegerField(blank=True, default=None, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Blog',
            },
        ),
        migrations.CreateModel(
            name='experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_id', models.CharField(max_length=15, null=True)),
                ('experiment_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'experiment',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'feature',
            },
        ),
        migrations.CreateModel(
            name='mobile_phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_companny', models.CharField(max_length=200, null=True)),
                ('mobile_name', models.CharField(max_length=300)),
                ('price', models.IntegerField()),
                ('rating', models.CharField(max_length=300)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'mobile_phone',
            },
        ),
        migrations.CreateModel(
            name='phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Mobile_Companny', models.CharField(max_length=200, null=True)),
                ('Mobile_Name', models.CharField(max_length=300, null=True)),
                ('Whats_new', models.TextField(null=True)),
                ('Chip', models.CharField(max_length=500, null=True)),
                ('Colors', models.CharField(max_length=300, null=True)),
                ('Cpu', models.CharField(max_length=500, null=True)),
                ('Dimensions', models.CharField(max_length=300, null=True)),
                ('Gpu', models.CharField(max_length=500, null=True)),
                ('Resolution', models.CharField(max_length=500, null=True)),
                ('Size', models.FloatField(null=True)),
                ('Weight', models.IntegerField(null=True)),
                ('price_in_pkr', models.IntegerField(null=True)),
                ('price_in_usd', models.IntegerField(null=True)),
                ('rating', models.FloatField(null=True)),
                ('OS', models.CharField(max_length=300, null=True)),
                ('imagepath1', models.ImageField(blank=True, null=True, upload_to='webapp/img/sampleimages/')),
                ('imagepath2', models.ImageField(blank=True, null=True, upload_to='webapp/img/sampleimages/')),
                ('battery', models.CharField(max_length=400, null=True)),
                ('back_camera', models.CharField(max_length=400, null=True)),
            ],
            options={
                'verbose_name_plural': 'phone',
            },
        ),
        migrations.CreateModel(
            name='platform_feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'platform_feature',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='prunedmobilephones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('u_id', models.IntegerField(null=True)),
                ('m_id', models.IntegerField(null=True)),
                ('roles', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name_plural': 'Pruned Mobile Phones',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name_plural': 'Role',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='samsung_phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Mobile_Companny', models.CharField(max_length=200, null=True)),
                ('Mobile_Name', models.CharField(max_length=300, null=True)),
                ('Whats_new', models.TextField(null=True)),
                ('Chip', models.CharField(max_length=500, null=True)),
                ('Colors', models.CharField(max_length=300, null=True)),
                ('Cpu', models.CharField(max_length=500, null=True)),
                ('Dimensions', models.CharField(max_length=300, null=True)),
                ('Gpu', models.CharField(max_length=500, null=True)),
                ('Resolution', models.CharField(max_length=500, null=True)),
                ('Size', models.FloatField(null=True)),
                ('Weight', models.IntegerField(null=True)),
                ('price_in_pkr', models.IntegerField(null=True)),
                ('price_in_usd', models.IntegerField(null=True)),
                ('rating', models.FloatField(null=True)),
                ('OS', models.CharField(max_length=300, null=True)),
                ('imagepath1', models.CharField(max_length=300, null=True)),
                ('imagepath2', models.CharField(max_length=300, null=True)),
                ('battery', models.CharField(max_length=400, null=True)),
                ('back_camera', models.CharField(max_length=400, null=True)),
            ],
            options={
                'verbose_name_plural': 'samsungphone',
            },
        ),
        migrations.CreateModel(
            name='signup_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=300, null=True)),
                ('role', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='sort_feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_id', models.IntegerField(null=True)),
                ('feature', models.CharField(max_length=200, null=True)),
                ('position', models.IntegerField(null=True)),
                ('sh_hd', models.IntegerField(null=True)),
                ('roles', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name_plural': 'Sort Feature',
            },
        ),
        migrations.CreateModel(
            name='template_roles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_add', models.BooleanField(default=True)),
                ('can_view', models.BooleanField(default=True)),
                ('can_edit', models.BooleanField(default=True)),
                ('can_del', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now_add=True)),
                ('role_id', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.Role')),
            ],
            options={
                'verbose_name_plural': 'Template Roles',
            },
        ),
        migrations.CreateModel(
            name='templates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Templates',
            },
        ),
        migrations.CreateModel(
            name='userscoreRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_id', models.IntegerField(null=True)),
                ('element_id', models.IntegerField(null=True)),
                ('feat_priority', models.IntegerField(null=True)),
                ('feat_name', models.CharField(max_length=200, null=True)),
                ('mobile_id', models.IntegerField(null=True)),
                ('user_id', models.IntegerField(null=True)),
                ('date_created', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('date_modified', models.DateField(default=datetime.date.today, verbose_name='Date')),
            ],
            options={
                'verbose_name_plural': 'User Score Record',
            },
        ),
        migrations.AddField(
            model_name='template_roles',
            name='template_id',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.templates'),
        ),
        migrations.AddField(
            model_name='user',
            name='role_id',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.Role'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
